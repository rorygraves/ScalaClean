package scalaclean.test.nodes

trait GrandParentTrait {
  def d1: Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d1() [58-69]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d1()]] */
  def d2(a: Int): Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d2(scala.Int) [72-91]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d2(scala.Int)]] */
  def d2a(a: Int)(b: Int): Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d2a(scala.Intscala.Int) [94-122]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d2a(scala.Intscala.Int)]] */
  def d3()(): Int/* PlainMethodModel C:scalaclean.test.nodes.GrandParentTrait/M:d3() [125-140]  [[C:scalaclean.test.nodes.GrandParentTrait/M:d3()]] */

}/* TraitModel C:scalaclean.test.nodes.GrandParentTrait [31-143]  [[C:scalaclean.test.nodes.GrandParentTrait]] */

trait ParentTrait extends GrandParentTrait {
  def d3(): () => Int = ???/* PlainMethodModel C:scalaclean.test.nodes.ParentTrait/M:d3() [192-217]  [[C:scalaclean.test.nodes.ParentTrait/M:d3()]] */
}/* TraitModel C:scalaclean.test.nodes.ParentTrait [145-219]  [[C:scalaclean.test.nodes.ParentTrait]] */

trait ChildTrait extends ParentTrait {
  override def d3(): () => Int = ???/* PlainMethodModel C:scalaclean.test.nodes.ChildTrait/M:d3() [262-296]  [[C:scalaclean.test.nodes.ChildTrait/M:d3()]] */
  def d2a(a: Int)              = d2 _/* PlainMethodModel C:scalaclean.test.nodes.ChildTrait/M:d2a(scala.Int) [299-334]  [[C:scalaclean.test.nodes.ChildTrait/M:d2a(scala.Int)]] */

}/* TraitModel C:scalaclean.test.nodes.ChildTrait [221-337]  [[C:scalaclean.test.nodes.ChildTrait]] */

trait Trait_ChildTrait extends ParentTrait {
  override def equals(obj: Any): Boolean = super.equals(obj)/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:equals(scala.Any) [386-444]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:equals(scala.Any)]] */

  override def clone(): AnyRef = super.clone()/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:clone() [448-492]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:clone()]] */

  override def toString: String = super.toString/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:toString() [496-542]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:toString()]] */

  override def finalize(): Unit = super.finalize()/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:finalize() [546-594]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:finalize()]] */

  override def hashCode(): Int = super.hashCode()/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:hashCode() [598-645]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:hashCode()]] */

  override def d1: Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d1() [649-675]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d1()]] */

  override def d2(a: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d2(scala.Int) [679-713]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d2(scala.Int)]] */

  override def d2a(a: Int)(b: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d2a(scala.Intscala.Int) [717-760]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d2a(scala.Intscala.Int)]] */

  override def d3()(): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Trait_ChildTrait/M:d3() [764-794]  [[C:scalaclean.test.nodes.Trait_ChildTrait/M:d3()]] */
}/* TraitModel C:scalaclean.test.nodes.Trait_ChildTrait [339-796]  [[C:scalaclean.test.nodes.Trait_ChildTrait]] */

class Class_ChildTrait extends ParentTrait {
  override def equals(obj: Any): Boolean = super.equals(obj)/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:equals(scala.Any) [845-903]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:equals(scala.Any)]] */

  override def clone(): AnyRef = super.clone()/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:clone() [907-951]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:clone()]] */

  override def toString: String = super.toString/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:toString() [955-1001]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:toString()]] */

  override def finalize(): Unit = super.finalize()/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:finalize() [1005-1053]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:finalize()]] */

  override def hashCode(): Int = super.hashCode()/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:hashCode() [1057-1104]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:hashCode()]] */

  override def d1: Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d1() [1108-1134]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d1()]] */

  override def d2(a: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d2(scala.Int) [1138-1172]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d2(scala.Int)]] */

  override def d2a(a: Int)(b: Int): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d2a(scala.Intscala.Int) [1176-1219]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d2a(scala.Intscala.Int)]] */

  override def d3()(): Int = ???/* PlainMethodModel C:scalaclean.test.nodes.Class_ChildTrait/M:d3() [1223-1253]  [[C:scalaclean.test.nodes.Class_ChildTrait/M:d3()]] */
}/* ClassModel C:scalaclean.test.nodes.Class_ChildTrait [798-1255]  [[C:scalaclean.test.nodes.Class_ChildTrait]] */

object Object_ChildTrait extends ParentTrait {
  override def equals(obj: Any): Boolean = super.equals(obj)/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:equals(scala.Any) [1306-1364]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:equals(scala.Any)]] */

  override def clone(): AnyRef = super.clone()/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:clone() [1368-1412]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:clone()]] */

  override def toString: String = super.toString/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:toString() [1416-1462]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:toString()]] */

  override def finalize(): Unit = super.finalize()/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:finalize() [1466-1514]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:finalize()]] */

  override def hashCode(): Int = super.hashCode()/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:hashCode() [1518-1565]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:hashCode()]] */

  override def d1: Int = ???/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:d1() [1569-1595]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:d1()]] */

  override def d2(a: Int): Int = ???/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:d2(scala.Int) [1599-1633]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:d2(scala.Int)]] */

  override def d2a(a: Int)(b: Int): Int = ???/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:d2a(scala.Intscala.Int) [1637-1680]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:d2a(scala.Intscala.Int)]] */

  override def d3()(): Int = ???/* PlainMethodModel O:scalaclean.test.nodes.Object_ChildTrait/M:d3() [1684-1714]  [[O:scalaclean.test.nodes.Object_ChildTrait/M:d3()]] */
}/* ObjectModel O:scalaclean.test.nodes.Object_ChildTrait [1257-1716]  [[O:scalaclean.test.nodes.Object_ChildTrait]] */

//class GrandParentClass {
//
//  def foo: Unit = ()
//}
//class ParentClass extends GrandParentClass {
//}
//class ChildClass extends ParentClass{
//  def bar(x:Any): Unit = ()
//}
//
//object ClildObject extends ChildClass {
//  new Child().foo
//  new Child().bar(1)
//}

object TestVarVal {
  val x1: Int      = 5/* ValModel O:scalaclean.test.nodes.TestVarVal/V:x1  [2015-2035]  lazy=false [[O:scalaclean.test.nodes.TestVarVal/V:x1 ]] */
  var x2: Int      = 5/* VarModel O:scalaclean.test.nodes.TestVarVal/V:x2  [2038-2058]  [[O:scalaclean.test.nodes.TestVarVal/V:x2 ]] */
  lazy val x3: Int = 5/* ValModel O:scalaclean.test.nodes.TestVarVal/V:x3 [2061-2081]  lazy=true [[O:scalaclean.test.nodes.TestVarVal/V:x3]] *//* GetterMethodModel O:scalaclean.test.nodes.TestVarVal/M:x3() [2061-2081]  [[O:scalaclean.test.nodes.TestVarVal/M:x3()]] */

  val (x10/* ValModel O:scalaclean.test.nodes.TestVarVal/V:x10  [2090-2093]  lazy=false [[O:scalaclean.test.nodes.TestVarVal/V:x10 ]] */, x11/* ValModel O:scalaclean.test.nodes.TestVarVal/V:x11  [2095-2098]  lazy=false [[O:scalaclean.test.nodes.TestVarVal/V:x11 ]] */)      = (1, 2)/* FieldsModel O:scalaclean.test.nodes.TestVarVal/V:x$1 [2085-2113]  [[O:scalaclean.test.nodes.TestVarVal/V:x$1]] */
  var (x20/* VarModel O:scalaclean.test.nodes.TestVarVal/V:x20  [2121-2124]  [[O:scalaclean.test.nodes.TestVarVal/V:x20 ]] */, x21/* VarModel O:scalaclean.test.nodes.TestVarVal/V:x21  [2126-2129]  [[O:scalaclean.test.nodes.TestVarVal/V:x21 ]] */)      = (1, 2)/* FieldsModel O:scalaclean.test.nodes.TestVarVal/V:x$2 [2116-2144]  [[O:scalaclean.test.nodes.TestVarVal/V:x$2]] */
  lazy val (x30/* ValModel O:scalaclean.test.nodes.TestVarVal/V:x30 [2157-2160]  lazy=true [[O:scalaclean.test.nodes.TestVarVal/V:x30]] *//* GetterMethodModel O:scalaclean.test.nodes.TestVarVal/M:x30() [2157-2160]  [[O:scalaclean.test.nodes.TestVarVal/M:x30()]] */, x31/* ValModel O:scalaclean.test.nodes.TestVarVal/V:x31 [2162-2165]  lazy=true [[O:scalaclean.test.nodes.TestVarVal/V:x31]] *//* GetterMethodModel O:scalaclean.test.nodes.TestVarVal/M:x31() [2162-2165]  [[O:scalaclean.test.nodes.TestVarVal/M:x31()]] */) = (1, 2)/* FieldsModel O:scalaclean.test.nodes.TestVarVal/M:x$3() [2147-2175]  [[O:scalaclean.test.nodes.TestVarVal/M:x$3()]] */

}/* ObjectModel O:scalaclean.test.nodes.TestVarVal [1993-2178]  [[O:scalaclean.test.nodes.TestVarVal]] */
